// <auto-generated />
using System;
using CRUD_Operation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRUD_Operation.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CRUD_Operation.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EmployeeSalary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 502030,
                            EmployeeCode = "EMP319",
                            EmployeeName = "Mehedi Hasan",
                            EmployeeSalary = 50000m
                        },
                        new
                        {
                            EmployeeId = 502031,
                            EmployeeCode = "EMP321",
                            EmployeeName = "Ashikur Rahman",
                            EmployeeSalary = 45000m
                        },
                        new
                        {
                            EmployeeId = 502032,
                            EmployeeCode = "EMP322",
                            EmployeeName = "Rakibul Islam",
                            EmployeeSalary = 52000m
                        });
                });

            modelBuilder.Entity("CRUD_Operation.Model.EmployeeAttendance", b =>
                {
                    b.Property<int>("EmployeeAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("IsAbsent")
                        .HasColumnType("int");

                    b.Property<int>("IsOffday")
                        .HasColumnType("int");

                    b.Property<int>("IsPresent")
                        .HasColumnType("int");

                    b.HasKey("EmployeeAttendanceId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeAttendance");

                    b.HasData(
                        new
                        {
                            EmployeeAttendanceId = 1,
                            AttendanceDate = new DateTime(2023, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502030,
                            IsAbsent = 0,
                            IsOffday = 0,
                            IsPresent = 1
                        },
                        new
                        {
                            EmployeeAttendanceId = 2,
                            AttendanceDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502030,
                            IsAbsent = 1,
                            IsOffday = 0,
                            IsPresent = 0
                        },
                        new
                        {
                            EmployeeAttendanceId = 3,
                            AttendanceDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502031,
                            IsAbsent = 1,
                            IsOffday = 0,
                            IsPresent = 1
                        });
                });

            modelBuilder.Entity("CRUD_Operation.Model.EmployeeAttendance", b =>
                {
                    b.HasOne("CRUD_Operation.Model.Employee", "employee")
                        .WithOne("employeeAttendance")
                        .HasForeignKey("CRUD_Operation.Model.EmployeeAttendance", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("CRUD_Operation.Model.Employee", b =>
                {
                    b.Navigation("employeeAttendance");
                });
#pragma warning restore 612, 618
        }
    }
}
